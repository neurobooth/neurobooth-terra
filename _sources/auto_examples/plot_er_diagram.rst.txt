
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_er_diagram.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_er_diagram.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_er_diagram.py:


==================================================
Create Entity-Relation diagram from Postgres table
==================================================

This example demonstrates how to create postgres table with neurobooth-terra.

.. GENERATED FROM PYTHON SOURCE LINES 8-92




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    strict digraph "" {
            graph [overlap=False,
                    repulsiveforce=10.0,
                    splines=curved
            ];
            node [label="\N"];
            contact  [label=<<table border='0' cellborder='1' cellspacing='0' cellpadding='4'><th><td bgcolor="lightsalmon"><b>contact</b></td></th>
    <tr><td port="email">email</td></tr></table>>,
                    shape=plaintext];
            test_consent     [label=<<table border='0' cellborder='1' cellspacing='0' cellpadding='4'><th><td bgcolor="lightsalmon"><b>test_consent</b></td></th>
    <tr><td port="consent_date">consent_date</td></tr>
    <tr><td port="subject_id">subject_id</td></tr></table>>,
                    shape=plaintext];
            study    [label=<<table border='0' cellborder='1' cellspacing='0' cellpadding='4'><th><td bgcolor="lightsalmon"><b>study</b></td></th>
    <tr><td port="protocol_version_array">protocol_version_array</td></tr>
    <tr><td port="IRB_protocol_number">IRB_protocol_number</td></tr>
    <tr><td port="protocol_date_array">protocol_date_array</td></tr>
    <tr><td port="consent_date_array">consent_date_array</td></tr>
    <tr><td port="consent_version_array">consent_version_array</td></tr>
    <tr><td port="study_title">study_title</td></tr>
    <tr><td port="study_id">study_id</td></tr></table>>,
                    shape=plaintext];
            register         [label=<<table border='0' cellborder='1' cellspacing='0' cellpadding='4'><th><td bgcolor="lightsalmon"><b>register</b></td></th>
    <tr><td port="subject_id">subject_id</td></tr>
    <tr><td port="study_id">study_id</td></tr>
    <tr><td port="application_id">application_id</td></tr>
    <tr><td port="site_date">site_date</td></tr></table>>,
                    shape=plaintext];
            clinical         [label=<<table border='0' cellborder='1' cellspacing='0' cellpadding='4'><th><td bgcolor="lightsalmon"><b>clinical</b></td></th>
    <tr><td port="MRN">MRN</td></tr>
    <tr><td port="symptom_age_onset">symptom_age_onset</td></tr>
    <tr><td port="height">height</td></tr>
    <tr><td port="weight">weight</td></tr>
    <tr><td port="diagnosis">diagnosis</td></tr>
    <tr><td port="relevant_diagnosis">relevant_diagnosis</td></tr>
    <tr><td port="subject_id">subject_id</td></tr>
    <tr><td port="handedness">handedness</td></tr>
    <tr><td port="medications">medications</td></tr>
    <tr><td port="study_id">study_id</td></tr>
    <tr><td port="application_id">application_id</td></tr>
    <tr><td port="site_date">site_date</td></tr></table>>,
                    shape=plaintext];
            clinical:study_id -> study:study_id      [arrowtype=normal];
            demograph        [label=<<table border='0' cellborder='1' cellspacing='0' cellpadding='4'><th><td bgcolor="lightsalmon"><b>demograph</b></td></th>
    <tr><td port="age_study_start">age_study_start</td></tr>
    <tr><td port="symptom_age_onset">symptom_age_onset</td></tr>
    <tr><td port="date_of_birth">date_of_birth</td></tr>
    <tr><td port="site_date">site_date</td></tr>
    <tr><td port="sex">sex</td></tr>
    <tr><td port="race">race</td></tr>
    <tr><td port="ethnicity">ethnicity</td></tr>
    <tr><td port="subject_id">subject_id</td></tr>
    <tr><td port="recruit_mechanism">recruit_mechanism</td></tr>
    <tr><td port="study_id">study_id</td></tr>
    <tr><td port="application_id">application_id</td></tr></table>>,
                    shape=plaintext];
            demograph:study_id -> study:study_id     [arrowtype=normal];
            human_obs_log    [label=<<table border='0' cellborder='1' cellspacing='0' cellpadding='4'><th><td bgcolor="lightsalmon"><b>human_obs_log</b></td></th>
    <tr><td port="site_date">site_date</td></tr>
    <tr><td port="study_id">study_id</td></tr>
    <tr><td port="observer_id">observer_id</td></tr>
    <tr><td port="subject_id">subject_id</td></tr>
    <tr><td port="application_id">application_id</td></tr>
    <tr><td port="response_array">response_array</td></tr>
    <tr><td port="human_obs_id">human_obs_id</td></tr></table>>,
                    shape=plaintext];
            human_obs_log:study_id -> study:study_id         [arrowtype=normal];
            observer         [label=<<table border='0' cellborder='1' cellspacing='0' cellpadding='4'><th><td bgcolor="lightsalmon"><b>observer</b></td></th>
    <tr><td port="age">age</td></tr>
    <tr><td port="subject_id">subject_id</td></tr>
    <tr><td port="first_name">first_name</td></tr>
    <tr><td port="last_name">last_name</td></tr>
    <tr><td port="sex">sex</td></tr>
    <tr><td port="race">race</td></tr>
    <tr><td port="ethnicity">ethnicity</td></tr>
    <tr><td port="observer_id">observer_id</td></tr>
    <tr><td port="relationship">relationship</td></tr></table>>,
                    shape=plaintext];
            human_obs_log:observer_id -> observer:observer_id        [arrowtype=normal];
            human_obs_data   [label=<<table border='0' cellborder='1' cellspacing='0' cellpadding='4'><th><td bgcolor="lightsalmon"><b>human_obs_data</b></td></th>
    <tr><td port="human_obs_id">human_obs_id</td></tr>
    <tr><td port="obs_name">obs_name</td></tr>
    <tr><td port="feature_of_interest">feature_of_interest</td></tr>
    <tr><td port="measurement_type">measurement_type</td></tr>
    <tr><td port="question_array">question_array</td></tr>
    <tr><td port="response_array">response_array</td></tr>
    <tr><td port="obs_property_array">obs_property_array</td></tr>
    <tr><td port="obs_time_period_array">obs_time_period_array</td></tr>
    <tr><td port="units_array">units_array</td></tr></table>>,
                    shape=plaintext];
            human_obs_log:human_obs_id -> human_obs_data:human_obs_id        [arrowtype=normal];
            instruction      [label=<<table border='0' cellborder='1' cellspacing='0' cellpadding='4'><th><td bgcolor="lightsalmon"><b>instruction</b></td></th>
    <tr><td port="instruction_id">instruction_id</td></tr>
    <tr><td port="instruction_text">instruction_text</td></tr>
    <tr><td port="instruction_filetype">instruction_filetype</td></tr>
    <tr><td port="instruction_file">instruction_file</td></tr></table>>,
                    shape=plaintext];
            tech_obs_data    [label=<<table border='0' cellborder='1' cellspacing='0' cellpadding='4'><th><td bgcolor="lightsalmon"><b>tech_obs_data</b></td></th>
    <tr><td port="tech_obs_id">tech_obs_id</td></tr>
    <tr><td port="obs_name">obs_name</td></tr>
    <tr><td port="feature_of_interest">feature_of_interest</td></tr>
    <tr><td port="measurement_type">measurement_type</td></tr>
    <tr><td port="instruction_id">instruction_id</td></tr>
    <tr><td port="demo_id">demo_id</td></tr>
    <tr><td port="stimulus_id">stimulus_id</td></tr>
    <tr><td port="device_id_array">device_id_array</td></tr>
    <tr><td port="question_array">question_array</td></tr>
    <tr><td port="response_array">response_array</td></tr>
    <tr><td port="obs_property_array">obs_property_array</td></tr>
    <tr><td port="obs_time_period_array">obs_time_period_array</td></tr>
    <tr><td port="units_array">units_array</td></tr>
    <tr><td port="sensor_id_array">sensor_id_array</td></tr>
    <tr><td port="file_id_array">file_id_array</td></tr>
    <tr><td port="sensor_param_array">sensor_param_array</td></tr>
    <tr><td port="device-stim_sync_array">device-stim_sync_array</td></tr>
    <tr><td port="interdevice_sync-matrix">interdevice_sync-matrix</td></tr></table>>,
                    shape=plaintext];
            tech_obs_data:instruction_id -> instruction:instruction_id       [arrowtype=normal];
            stimulus         [label=<<table border='0' cellborder='1' cellspacing='0' cellpadding='4'><th><td bgcolor="lightsalmon"><b>stimulus</b></td></th>
    <tr><td port="duration">duration</td></tr>
    <tr><td port="stimulus_id">stimulus_id</td></tr>
    <tr><td port="stimulus_description">stimulus_description</td></tr>
    <tr><td port="num_iterations">num_iterations</td></tr>
    <tr><td port="stimulus_filetype">stimulus_filetype</td></tr>
    <tr><td port="stimulus_file">stimulus_file</td></tr></table>>,
                    shape=plaintext];
            tech_obs_data:stimulus_id -> stimulus:stimulus_id        [arrowtype=normal];
            tech_obs_log     [label=<<table border='0' cellborder='1' cellspacing='0' cellpadding='4'><th><td bgcolor="lightsalmon"><b>tech_obs_log</b></td></th>
    <tr><td port="site_date">site_date</td></tr>
    <tr><td port="subject_id">subject_id</td></tr>
    <tr><td port="study_id">study_id</td></tr>
    <tr><td port="tech_obs_id">tech_obs_id</td></tr>
    <tr><td port="staff_id">staff_id</td></tr>
    <tr><td port="application_id">application_id</td></tr>
    <tr><td port="event_array">event_array</td></tr>
    <tr><td port="date_time_array">date_time_array</td></tr>
    <tr><td port="sensor_file_id_array">sensor_file_id_array</td></tr>
    <tr><td port="tech_obs_log_id">tech_obs_log_id</td></tr>
    <tr><td port="collection_id">collection_id</td></tr></table>>,
                    shape=plaintext];
            tech_obs_log:study_id -> study:study_id  [arrowtype=normal];
            tech_obs_log:tech_obs_id -> tech_obs_data:tech_obs_id    [arrowtype=normal];
            sensor_file_log  [label=<<table border='0' cellborder='1' cellspacing='0' cellpadding='4'><th><td bgcolor="lightsalmon"><b>sensor_file_log</b></td></th>
    <tr><td port="file_start_time">file_start_time</td></tr>
    <tr><td port="file_end_time">file_end_time</td></tr>
    <tr><td port="true_temporal_resolution">true_temporal_resolution</td></tr>
    <tr><td port="true_spatial_resolution">true_spatial_resolution</td></tr>
    <tr><td port="tech_obs_id">tech_obs_id</td></tr>
    <tr><td port="collection_id">collection_id</td></tr>
    <tr><td port="device_id">device_id</td></tr>
    <tr><td port="sensor_file_id">sensor_file_id</td></tr>
    <tr><td port="sensor_id">sensor_id</td></tr>
    <tr><td port="subject_id">subject_id</td></tr>
    <tr><td port="study_id">study_id</td></tr>
    <tr><td port="tech_obs_log_id">tech_obs_log_id</td></tr></table>>,
                    shape=plaintext];
            tech_obs_log:sensor_file_id_array -> sensor_file_log:sensor_file_id_array        [arrowtype=normal];
            collection       [label=<<table border='0' cellborder='1' cellspacing='0' cellpadding='4'><th><td bgcolor="lightsalmon"><b>collection</b></td></th>
    <tr><td port="active">active</td></tr>
    <tr><td port="collection_name">collection_name</td></tr>
    <tr><td port="tech_obs_array">tech_obs_array</td></tr>
    <tr><td port="human_obs_array">human_obs_array</td></tr>
    <tr><td port="collection_id">collection_id</td></tr></table>>,
                    shape=plaintext];
            tech_obs_log:collection_id -> collection:collection_id   [arrowtype=normal];
            sensor_file_log:study_id -> study:study_id       [arrowtype=normal];
            sensor_file_log:tech_obs_id -> tech_obs_data:tech_obs_id         [arrowtype=normal];
            sensor_file_log:tech_obs_log_id -> tech_obs_log:tech_obs_log_id  [arrowtype=normal];
            sensor_file_log:collection_id -> collection:collection_id        [arrowtype=normal];
            device   [label=<<table border='0' cellborder='1' cellspacing='0' cellpadding='4'><th><td bgcolor="lightsalmon"><b>device</b></td></th>
    <tr><td port="wearable_bool">wearable_bool</td></tr>
    <tr><td port="sensor_id_array">sensor_id_array</td></tr>
    <tr><td port="device_location">device_location</td></tr>
    <tr><td port="device_id">device_id</td></tr>
    <tr><td port="device_make">device_make</td></tr>
    <tr><td port="device_model">device_model</td></tr>
    <tr><td port="device_firmware">device_firmware</td></tr>
    <tr><td port="device_name">device_name</td></tr>
    <tr><td port="device_sn">device_sn</td></tr></table>>,
                    shape=plaintext];
            sensor_file_log:device_id -> device:device_id    [arrowtype=normal];
            sensor   [label=<<table border='0' cellborder='1' cellspacing='0' cellpadding='4'><th><td bgcolor="lightsalmon"><b>sensor</b></td></th>
    <tr><td port="temporal_res">temporal_res</td></tr>
    <tr><td port="spatial_res_x">spatial_res_x</td></tr>
    <tr><td port="spatial_res_y">spatial_res_y</td></tr>
    <tr><td port="sensor_id">sensor_id</td></tr>
    <tr><td port="file_type">file_type</td></tr></table>>,
                    shape=plaintext];
            sensor_file_log:sensor_id -> sensor:sensor_id    [arrowtype=normal];
            collection:human_obs_array -> human_obs_data:human_obs_array     [arrowtype=normal];
            collection:tech_obs_array -> tech_obs_data:tech_obs_array        [arrowtype=normal];
            test     [label=<<table border='0' cellborder='1' cellspacing='0' cellpadding='4'><th><td bgcolor="lightsalmon"><b>test</b></td></th>
    <tr><td port="Age">Age</td></tr>
    <tr><td port="subject_id">subject_id</td></tr>
    <tr><td port="first_name_birth">first_name_birth</td></tr>
    <tr><td port="last_name_birth">last_name_birth</td></tr></table>>,
                    shape=plaintext];
    }

    /Users/mainak/anaconda3/envs/neurobooth/lib/python3.8/site-packages/pygraphviz/agraph.py:1390: RuntimeWarning: Warning: node human_obs_data, port human_obs_array unrecognized
    Warning: node tech_obs_data, port tech_obs_array unrecognized

      warnings.warn(b"".join(errors).decode(self.encoding), RuntimeWarning)






|

.. code-block:: default

    import pygraphviz as pgv

    from neurobooth_terra import Table
    import psycopg2

    #### Initialize connection to database
    connect_str = ("dbname='neurobooth' user='neuroboother' host='localhost' "
                   "password='neuroboothrocks'")

    conn = psycopg2.connect(connect_str)

    def query(cmd):
        cursor = conn.cursor()
        cursor.execute(cmd)
        conn.commit()

        data = cursor.fetchall()
        cursor.close()
        return data

    #### Some useful postgres commands
    fk_cmd_base = """
        SELECT
            tc.table_name, 
            kcu.column_name,
            ccu.table_name AS foreign_table_name,
            ccu.column_name AS foreign_column_name 

        FROM
            information_schema.table_constraints AS tc 
            JOIN information_schema.key_column_usage AS kcu
              ON tc.constraint_name = kcu.constraint_name
              AND tc.table_schema = kcu.table_schema
            JOIN information_schema.constraint_column_usage AS ccu
              ON ccu.constraint_name = tc.constraint_name
              AND ccu.table_schema = tc.table_schema
        """

    query_tables_cmd = """
    SELECT *
    FROM pg_catalog.pg_tables
    WHERE schemaname != 'pg_catalog' AND 
        schemaname != 'information_schema';
    """

    tables = query(query_tables_cmd)
    table_ids = [table[1] for table in tables]

    #### Create graph

    A = pgv.AGraph(directed=True, repulsiveforce=10.0,
                   overlap=False, splines='curved')

    # Add nodes
    for table_id in table_ids:
        table = Table(table_id, conn)

        rows = []
        rows.append(f'<th><td bgcolor="lightsalmon"><b>{table_id}</b></td></th>')
        for column_name in table.column_names:
            rows.append(f''
            '<tr>'
                f'<td port="{column_name}">{column_name}</td>'
            '</tr>')
        label = "<<table border='0' cellborder='1' cellspacing='0' cellpadding='4'>"
        label += '\n'.join(rows)
        label += "</table>>"
        A.add_node(table_id, shape='plaintext', label=label)

    # Add edges
    for table_id in table_ids:
        foreign_key_cmd = fk_cmd_base + ("WHERE tc.constraint_type = 'FOREIGN KEY'"
                                        f" AND tc.table_name='{table_id}';")

        fkeys = query(foreign_key_cmd)
        if len(fkeys) > 0:
            for fkey in fkeys:
                fkey_table_id = fkey[2]
                A.add_edge(table_id, fkey_table_id, headport=fkey[1], tailport=fkey[1],
                           arrowtype='normal')

    print(A.string())  # print to screen
    A.layout(prog='fdp')  # layout with default (neato)
    A.draw("er_diagram.pdf")  # draw png


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  3.079 seconds)


.. _sphx_glr_download_auto_examples_plot_er_diagram.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_er_diagram.py <plot_er_diagram.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_er_diagram.ipynb <plot_er_diagram.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
